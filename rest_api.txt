/* **********************     REST API Guidelines Followed    **************************** */

GET requests should be performed to retrieve data with the identifier after a slash in the endpoint:
 GET /v1/users/1234
 -No body should be included

POST requests should be used for two purposes:
  1. Creating a new instance in the database: POST /v1/users
  2. Updating an known instance by identifier with a partial set of instance data: POST /v1/users/1234
  NOTE: This will overwrite only the properties that are given to the server
  -Body is included

PUT requests should be used to update when all instance data is known and sent to endpoint: PUT /v1/users/1234
  NOTE: This will do a complete overwrite
  -Body is included

DELETE requests should be used to remove instances from the database: DELETE /v1/users/1234
  -No body should be included


/* *****************************     LangSnap REST API Endpoints    ******************************************* */


GET /v1/decks/deckid/1234 Used to get a single deck and all cards with information to be ready for use on front-endpoint

Request Body Format: 
N/A, id of desired deck should be added to the endpoint (in place of 1234 above)

Response Body Format: 
{
  "id": 2,
  "name": "ZBDeck",
  "stars": 0,
  "cards": [
    {
      "id": 2,
      "imgUrl": "httpZBDECK???",
      "wordMap": "{}",
      "stars": 0
    },
    {
      "id": 5,
      "imgUrl": "http???",
      "wordMap": "{}",
      "stars": 0
    }
  ]
}
This operation is to get a single deck of cards back for the user with all card info available


GET /v1/decks/all    Used to get all decks in the database with an imgUrl for each

Request Body Format: 
N/A, request is implicit of getting all decks for all users

Response Body Format: 
[
  {
    "id": 1,
    "name": "ZDeck",
    "stars": 0,
    "cards": [
      {
        "imgUrl": "httpZDECK???"
      },
      {
        "imgUrl": "httpZeBrADECK???"
      }
    ]
  }, ...
]
This operation is to get all decks from all users back. It includes a picture from a card in the 
deck to have for a background


GET /v1/decks/userid/1234    Used to request all decks that a particular user has

Request Body Format: 
N/A, id of user should be added to the endpoint (in place of 1234 above)

Response Body Format: 
[
  {
    "id": 3,
    "name": "JDeck",
    "stars": 0,
    "cards": [
      {
        "imgUrl": "httpJDECK???"
      }
    ]
  },
  {
    "id": 4,
    "name": "JJDeck",
    "stars": 0,
    "cards": [
      {
        "imgUrl": "httpJJDECK???"
      }
    ]
  }
]
This operation gets all of the decks and card info for those decks for a particular userId


GET /v1/cards/all     Used to get every card that is available in the database

Request Body Format: 
N/A, assumed app-wide search

Response Body Format:
[
  {
    "id": 1,
    "imgUrl": "httpZDECK???",
    "stars": 0
  },
  {
    "id": 2,
    "imgUrl": "httpZBDECK???",
    "stars": 0
  },
  {
    "id": 3,
    "imgUrl": "httpJDECK???",
    "stars": 0
  }
]
This operation gets all of the cards in the database for users to select/add desired cards


GET /v1/cards/deckid/1234    Used to get all cards in a specific deck for a user

Request Body Format:
N/A, deckId specified in the url

Response Body Format: 
[
  {
    "id": 2,
    "name": "ZBDeck",
    "cards": [
      {
        "id": 2,
        "imgUrl": "httpZBDECK???",
        "wordMap": "{}",
        "stars": 0,
        "deck_card": {
          "lastVisited": null,
          "timeInterval": null,
          "phrase": null
        }
      },
      {
        "id": 5,
        "imgUrl": "http???",
        "wordMap": "{}",
        "stars": 0,
        "deck_card": {
          "lastVisited": null,
          "timeInterval": null,
          "phrase": null
        }
      }
    ]
  }
]
This operation is used to query only the cards in a specific user's deck


POST /v1/users    Used to create a new user in the database, should be done after authenticating

Request Body Format: 
{
  "firstName":"XXXX",     //String
  "lastName:"XXXX",       //String
  "email":"XXXX",         //String
  "token":"XXXX"          //String
}

Response Body Format:
id     //String

This operation is used to create a new user and add them to the database. 


POST /v1/users/addlang  Fill in <id> with appropriate id of user received back after login. Used to update the
user profile on database.

Request Body Format: 
{
  "id":XXXXX,             //Number
  "nativeLang":"XXXX",    //String
  "learnLang":"XXXX"      //String
}

Response Body Format: 
{
  "firstName":"XXXX",
  "lastName":"XXXX",
  "email":"XXXX",
  "token":"XXXX",
  "nativeLang":"XXXX",
  "learnLang":"XXXX"
}
This operation is used to add the learnLang and nativeLang properties to the user since this cannot be done on
the authentication screen.


POST /v1/decks/new  Used to create a new deck for the user in database.

Request Body Format: 
{
  "name":"XXXX",          //String
  "id":XXXX,              //userId, Number
  "stars":XXXX            //Number
}

Response Body Format: 
id    //id of the created deck, String
This operation is used to by the user to create a new deck and add it to the database. The user can then add cards
as desired.



POST /v1/decks/adddecks  Used to copy multiple decks from another user to add them for a different user

Request Body Format: 
{
	"id":4,
	"decks":"[3,4]"
}

Response Body Format: 
[
  {
    "id": 15,
    "user_id": 4,
    "name": "JDeck",
    "stars": 0,
    "updated_at": "2017-05-26T02:02:53.069Z",
    "created_at": "2017-05-26T02:02:53.069Z"
  },
  {
    "id": 16,
    "user_id": 4,
    "name": "JJDeck",
    "stars": 0,
    "updated_at": "2017-05-26T02:02:53.069Z",
    "created_at": "2017-05-26T02:02:53.069Z"
  }
]
This operation creates many new decks for the desired user. It also finds all cards with the deckId and creates 
a new copy of each that then references the deckId of the new users new deck that was created.


POST /v1/decks/addcards       Used to add multiple cards from another

Request Body Format:
{
  "userId":XXXX,          //Number
  "deckId":XXXX,          //Number
  "cardIds":"[
    XXXX, ....            //Number
  ]"
}

Response Body Format:
200/400/500
This operation is used to add multiple cards at a time to a particular deckId of a user


POST /v1/cards/addcard     Used to create a new card object from one the user has created

Request Body Format:
{
	"user_id":1,
	"stars":0,
	"imgUrl":"http???",
	"wordMap":"{}",
	"deck_id":2
}

Response Body Format:
{
  "id": 3,
  "stars": 0,
  "wordMap": "{}",
  "imgUrl": "http???",
  "updated_at": "2017-05-25T19:17:41.675Z",
  "created_at": "2017-05-25T19:17:41.675Z"
}

This operation is used to create a new card from user pictures with translations, etc confirmed front side.


DELETE /v1/decks/1234    Used to delete a particular deck from the user account. 

Request Body Format:
N/A, id for the deck to delete should be included in the imgUrl

Response Body Format: 
{
  "id":XXXX,              //Number
  "name":"XXXX",          //String
  "stars":XXXX,           //Number
  "userId":"XXXX"         //String
}

This operation delete the deck of a specified id from the user's account. It also deletes all
userCardInfo instances that reference that deck.
